---
- hosts: localhost
  gather_facts: yes


# initialize vagrant host when needed
- hosts: "{{ playbook_host }}:&vagrant"
  gather_facts: no
  roles:
    - role: vagrant
      vagrant_base: "{{ playbook_vagrant_base }}"
      vagrant_task: 'up'
      vagrant_host: "{{ host_alias | default(inventory_hostname) }}"
      vagrant_root_path: "{{ inventory_dir | dirname }}/vagrant"
      delegate_to: localhost


- hosts: "{{ playbook_host }}"

  pre_tasks:
    - name: maven_artifact requisites
      package:
        name: python-lxml
      become: yes
      become_user: root
      delegate_to: localhost
      run_once: yes

  roles:
    - role: maven_build
      mb_git_repository: git@github.com:igloo-project/igloo-parent.git
      mb_git_branch: "{{  playbook_igloo_branch }}"
      mb_check_files:
        - "{{ mb_project_path }}/igloo/igloo-components/igloo-component-spring/target/igloo-component-spring-{{ playbook_igloo_version }}.jar"
      mb_mvn_command: mvn {{ '-P' + playbook_maven_profile if playbook_maven_profile is defined and playbook_maven_profile else '' }} -DskipTests -am clean install
      mb_project_path: "{{ playbook_local_git_igloo_path }}"
      mb_rebuild: no
      mb_mvn_environment:
        JAVA_HOME: "{{ playbook_local_java_home }}"
        MAVEN_OPTS: -Xmx2048m -Denforcer.skip=true
      delegate_to: localhost
      run_once: yes
      when: playbook_build_igloo

    - role: maven_build
      mb_git_repository: "{{ playbook_project_git_url }}"
      mb_git_branch: "{{  playbook_project_branch }}"
      mb_check_files:
        - "{{ playbook_local_git_repo_path }}/{{ playbook_maven_folder }}{{ playbook_application_name }}-webapp/target/{{ playbook_application_name }}.war"
      mb_mvn_command: mvn {{ '-P' + playbook_maven_profile if playbook_maven_profile is defined and playbook_maven_profile else '' }} -DskipTests -am clean install
      mb_project_path: "{{ playbook_local_git_repo_path }}"
      mb_rebuild: no
      mb_mvn_environment:
        JAVA_HOME: "{{ playbook_local_java_home }}"
        MAVEN_OPTS: -Xmx2048m -Denforcer.skip=true
      delegate_to: localhost
      run_once: yes
      when: playbook_build_project

- hosts: "{{ playbook_host }}"
  become: yes
  become_user: root

  pre_tasks:
    - name: maven_artifact requisites
      package:
        name: python-lxml

    - debug:
        msg: "{{ ansible_distribution_major_version }}"

  roles:
    - role: powo.utils

    - role: utils

    - role: selinux
      selinux_handle: 'auto'

    - role: authorized_keys
      ak_users: "{{ playbook_ssh_all_authorized_keys }}"
      ak_keys: "{{ playbook_ssh_authorized_keys }}"

    - role: config
      config_name: "{{ playbook_application_name }}"
      config_user: "{{ playbook_remote_user }}"
      config_group: "{{ playbook_remote_user }}"
      config_properties: "{{ playbook_config_properties }}"

    - role: dev_hosts
      delegate_to: localhost
      run_once: no

    - role: epel
      when: ansible_os_family == 'Redhat'

    - role: httpd
      httpd_step_install: yes
      httpd_step_configuration: no

    - role: postgresql
      postgresql_versions:
        - "9.6"

    - role: filesystem
      filesystem_application_name: "{{ playbook_application_name }}"
      filesystem_application_user: "{{ playbook_remote_user }}"
      filesystem_application_folders: "{{ playbook_application_folders }}"

    - role: java
      java_download_path: /data/work
      java_runtime_path: /data/opt
      java_results_var: jdks
      java_runtimes:
        - version: 8u131
          version_build: 11
          arch: x64
          type: jdk
          checksum: md5:75b2cb2249710d822a60f83e28860053
          key: jdk-8u131-x64
          id: d54c1d3a095b4ff2b6607d096fa80163

    - role: ssl_selfsigned
      ssl_selfsigned_cn: "{{ playbook_front_server_name }}"
      ssl_selfsigned_aliases: []
      ssl_selfsigned_certificate: "{{ playbook_ssl_certificate }}"
      ssl_selfsigned_key: "{{ playbook_ssl_key }}"

    - role: httpd
      httpd_server_name: "{{ playbook_front_server_name }}"
      httpd_server_aliases: []
      httpd_application_name: "{{ playbook_application_name }}"
      httpd_documentroot: "{{ playbook_application_path }}/site"
      httpd_ssl_certificate: "{{ playbook_httpd_ssl_certificate }}"
      httpd_ssl_key: "{{ playbook_httpd_ssl_key }}"
      httpd_ssl_cacertificate: "{{ playbook_httpd_ssl_cacertificate }}"
      httpd_context_name: "{{ playbook_context_name }}"
      httpd_ajp_port: "{{ playbook_tomcat_ajp_port }}"

    - role: letsencrypt
      letsencrypt_renew_email: "{{ playbook_letsencrypt_renew_email }}"
      when : "{{ playbook_letsencrypt }}"

    - role: postgresql_cluster
      postgresql_cluster_clusters:
        - name: application
          path: /data/services/pgsql/9.6/data
          postgresql_version: "9.6"
          port: "{{ playbook_postgresql_port }}"
          databases:
            - name: "{{ playbook_postgresql_database }}"
              owner: "{{ playbook_postgresql_user }}"
              schemas:
                - "{{ playbook_postgresql_user }}"
          users:
            - username: "{{ playbook_postgresql_user }}"
              password: "{{ playbook_postgresql_password }}"
              databases:
                - name: "{{ playbook_postgresql_database }}"
                  privileges: CONNECT,CREATE

    - role: tomcat8
      tomcat_version: 8.5.24
      tomcat_checksum: md5:080075877a66adf52b7f6d0013fa9730
      tomcat_dest: /data/opt/tomcat-8.5.24
      tomcat_default_user: "{{ playbook_remote_user }}"
      tomcat_default_java_home: "{{ jdks['jdk-8u131-x64'].path }}"
      tomcat_timeout_stop: 30s
      tomcat_download_target_path: "{{ playbook_download_target_path }}"
      tomcat_default_extra_opts: "{{ '-Digloo.profile=' + playbook_igloo_profile if playbook_igloo_profile is defined and playbook_igloo_profile else none }}"
      tomcat_catalina_bases:
        - name: "{{ playbook_application_name }}"
          path: "{{ playbook_application_tomcat_path }}"
          apj_port: "{{ playbook_tomcat_ajp_port }}"
          http_port: "{{ playbook_tomcat_http_port }}"
          ajp_max_threads: "{{ playbook_tomcat_ajp_max_threads }}"
          http_max_threads: "{{ playbook_tomcat_http_max_threads }}"
          shutdown_port: "{{ playbook_tomcat_shutdown_port }}"

    - role: war
      war_application_war_src: "{{ playbook_local_git_repo_path }}/{{ playbook_maven_folder }}{{ playbook_application_name }}-webapp/target/{{ playbook_application_name }}.war"
      war_application_war_remote_src: no
      war_application_user: "{{ playbook_remote_user }}"
      war_tomcat_service: "tomcat@{{ playbook_application_name }}"
      war_tomcat_catalina_base: "{{ playbook_application_tomcat_path }}"
      war_context_name: "{{ playbook_context_name }}"
